@model BSUIREntrantsWebSite.Models.Enrollee

@{
    ViewBag.Title = "Create";
}

<script>
    $(function () {
        $('#UniversityDropDown').find('option').remove();
        $.ajax({
            type: "POST",
            url: "/NewEnrollee/GetUniversities",
            data: param = "",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $(data).each(function (index, item) {
                    $("#UniversityDropDown")
                        .append($('<option>', { value: item.id })
                        .text(item.text));
                });
            },
            error: errorFunc
        });
    });

    function getFaculties(input) {
        $('#FacultyDropdown').find('option').remove();
        $('#SpecialityDropdown').find('option').remove();
        $.ajax({
            type: "POST",
            url: "/NewEnrollee/GetFaculties",
            data: JSON.stringify( { 'id' : input } ),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $(data).each(function (index, item){
                    $("#FacultyDropdown")
                        .append($('<option>', { value: item.id })
                        .text(item.text));
                });
            },
            error: errorFunc
        });
    }
    function getSpecialities(input) {
        $('#SpecialityDropdown').find('option').remove();       
        $.ajax({
            type: "POST",
            url: "/NewEnrollee/GetSpecialities",
            data: JSON.stringify({ 'id': input }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $(data).each(function (index, item) {
                    $("#SpecialityDropdown")
                        .append($('<option>', { value: item.id })
                            .text(item.text));
                });
            },
            error: errorFunc
        });
    }
    function errorFunc(errorData) {
        alert('Error' + errorData.responseText);
    }
</script>

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enrollee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HomeTown, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HomeTown, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HomeTown, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalScore, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalScore, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalScore, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.University, Enumerable.Empty<SelectListItem>(), "",
 new { @id = "UniversityDropDown", @class = "form-control", @onchange = "getFaculties(this.value)"})
                @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Faculty, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Faculty, Enumerable.Empty<SelectListItem>(), "",
 new { @id = "FacultyDropdown", @class = "form-control", @onchange = "getSpecialities(this.value)"})
                @Html.ValidationMessageFor(model => model.Faculty, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Speciality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Speciality, Enumerable.Empty<SelectListItem>(), "",
 new { @id = "SpecialityDropdown", @class = "form-control"})
                @Html.ValidationMessageFor(model => model.Speciality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
